package com.walk.socketclient;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.Socket;
import java.net.UnknownHostException;

import com.walk.socketclientview.MainWindow;

public class ChatManager {
	private ChatManager() {};
	private static final ChatManager instance = new ChatManager();
	public static ChatManager getChatManager() {
		return instance;
	}
	
	MainWindow window;
	Socket socket;
	String IP;
	BufferedReader reader;
	PrintWriter writer;
	
	public void setWindow(MainWindow window) {
		this.window = window;
		window.appendText("文本框已经和ChatManager绑定了");
	}
	/**
	 * 实现连接服务器的操作
	 * @param ip
	 */
	public void connect(String ip) {
		this.IP = ip;
		new Thread() {

			@Override
			public void run() {
				try {
					socket = new Socket(IP, 12345);
					writer = new PrintWriter(
							new OutputStreamWriter(
									socket.getOutputStream()));
					reader = new BufferedReader(
							new InputStreamReader(
									socket.getInputStream()));
					String line;
					while((line = reader.readLine())!= null) {
						window.appendText("Receive:"+line+"\n");
					}
					reader.close();
					writer.close();
					writer =null;
					reader = null;
					
				} catch (UnknownHostException e) {
					e.printStackTrace();
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
			
		}.start();
	}
	public void send(String out) {
		if (writer != null) {
			writer.write(out+"\n");
			writer.flush();
		}else {
			window.appendText("当前的连接已经中断");
		}
	}
}
